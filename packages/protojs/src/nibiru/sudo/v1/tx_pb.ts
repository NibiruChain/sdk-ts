// @generated by protoc-gen-es v1.2.1 with parameter "target=ts"
// @generated from file nibiru/sudo/v1/tx.proto (package nibiru.sudo.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from "@bufbuild/protobuf"
import { Message, proto3 } from "@bufbuild/protobuf"

/**
 * MsgEditSudoers: Msg to update the "Sudoers" state.
 *
 * @generated from message nibiru.sudo.v1.MsgEditSudoers
 */
export class MsgEditSudoers extends Message<MsgEditSudoers> {
  /**
   * Action: identifier for the type of edit that will take place. Using this
   *   action field prevents us from needing to create several similar message
   *   types.
   *
   * @generated from field: string action = 1;
   */
  action = ""

  /**
   * Contracts: An input payload.
   *
   * @generated from field: repeated string contracts = 2;
   */
  contracts: string[] = []

  /**
   * Sender: Address for the signer of the transaction.
   *
   * @generated from field: string sender = 3;
   */
  sender = ""

  constructor(data?: PartialMessage<MsgEditSudoers>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = "nibiru.sudo.v1.MsgEditSudoers"
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "action", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    {
      no: 2,
      name: "contracts",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
      repeated: true,
    },
    { no: 3, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): MsgEditSudoers {
    return new MsgEditSudoers().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): MsgEditSudoers {
    return new MsgEditSudoers().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): MsgEditSudoers {
    return new MsgEditSudoers().fromJsonString(jsonString, options)
  }

  static equals(
    a: MsgEditSudoers | PlainMessage<MsgEditSudoers> | undefined,
    b: MsgEditSudoers | PlainMessage<MsgEditSudoers> | undefined,
  ): boolean {
    return proto3.util.equals(MsgEditSudoers, a, b)
  }
}

/**
 * MsgEditSudoersResponse indicates the successful execution of MsgEditSudeors.
 *
 * @generated from message nibiru.sudo.v1.MsgEditSudoersResponse
 */
export class MsgEditSudoersResponse extends Message<MsgEditSudoersResponse> {
  constructor(data?: PartialMessage<MsgEditSudoersResponse>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = "nibiru.sudo.v1.MsgEditSudoersResponse"
  static readonly fields: FieldList = proto3.util.newFieldList(() => [])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): MsgEditSudoersResponse {
    return new MsgEditSudoersResponse().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): MsgEditSudoersResponse {
    return new MsgEditSudoersResponse().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): MsgEditSudoersResponse {
    return new MsgEditSudoersResponse().fromJsonString(jsonString, options)
  }

  static equals(
    a: MsgEditSudoersResponse | PlainMessage<MsgEditSudoersResponse> | undefined,
    b: MsgEditSudoersResponse | PlainMessage<MsgEditSudoersResponse> | undefined,
  ): boolean {
    return proto3.util.equals(MsgEditSudoersResponse, a, b)
  }
}
