// @generated by protoc-gen-es v1.2.1 with parameter "target=ts"
// @generated from file nibiru/sudo/v1/state.proto (package nibiru.sudo.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from "@bufbuild/protobuf"
import { Message, proto3 } from "@bufbuild/protobuf"

/**
 * @generated from message nibiru.sudo.v1.Sudoers
 */
export class Sudoers extends Message<Sudoers> {
  /**
   * Root: The "root" user.
   *
   * @generated from field: string root = 1;
   */
  root = ""

  /**
   * Contracts: The set of contracts with elevated permissions.
   *
   * @generated from field: repeated string contracts = 2;
   */
  contracts: string[] = []

  constructor(data?: PartialMessage<Sudoers>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = "nibiru.sudo.v1.Sudoers"
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "root", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    {
      no: 2,
      name: "contracts",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
      repeated: true,
    },
  ])

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Sudoers {
    return new Sudoers().fromBinary(bytes, options)
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Sudoers {
    return new Sudoers().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): Sudoers {
    return new Sudoers().fromJsonString(jsonString, options)
  }

  static equals(
    a: Sudoers | PlainMessage<Sudoers> | undefined,
    b: Sudoers | PlainMessage<Sudoers> | undefined,
  ): boolean {
    return proto3.util.equals(Sudoers, a, b)
  }
}

/**
 * GenesisState defines the module's genesis state.
 *
 * @generated from message nibiru.sudo.v1.GenesisState
 */
export class GenesisState extends Message<GenesisState> {
  /**
   * @generated from field: nibiru.sudo.v1.Sudoers sudoers = 1;
   */
  sudoers?: Sudoers

  constructor(data?: PartialMessage<GenesisState>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = "nibiru.sudo.v1.GenesisState"
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sudoers", kind: "message", T: Sudoers },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): GenesisState {
    return new GenesisState().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): GenesisState {
    return new GenesisState().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): GenesisState {
    return new GenesisState().fromJsonString(jsonString, options)
  }

  static equals(
    a: GenesisState | PlainMessage<GenesisState> | undefined,
    b: GenesisState | PlainMessage<GenesisState> | undefined,
  ): boolean {
    return proto3.util.equals(GenesisState, a, b)
  }
}
