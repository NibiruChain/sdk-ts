// @generated by protoc-gen-connect-es v0.10.1 with parameter "target=ts"
// @generated from file nibiru/spot/v1/query.proto (package nibiru.spot.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import {
  QueryExitExactAmountInRequest,
  QueryExitExactAmountInResponse,
  QueryExitExactAmountOutRequest,
  QueryExitExactAmountOutResponse,
  QueryJoinExactAmountInRequest,
  QueryJoinExactAmountInResponse,
  QueryJoinExactAmountOutRequest,
  QueryJoinExactAmountOutResponse,
  QueryNumPoolsRequest,
  QueryNumPoolsResponse,
  QueryParamsRequest,
  QueryParamsResponse,
  QueryPoolNumberRequest,
  QueryPoolNumberResponse,
  QueryPoolParamsRequest,
  QueryPoolParamsResponse,
  QueryPoolRequest,
  QueryPoolResponse,
  QueryPoolsRequest,
  QueryPoolsResponse,
  QuerySpotPriceRequest,
  QuerySpotPriceResponse,
  QuerySwapExactAmountInRequest,
  QuerySwapExactAmountInResponse,
  QuerySwapExactAmountOutRequest,
  QuerySwapExactAmountOutResponse,
  QueryTotalLiquidityRequest,
  QueryTotalLiquidityResponse,
  QueryTotalPoolLiquidityRequest,
  QueryTotalPoolLiquidityResponse,
  QueryTotalSharesRequest,
  QueryTotalSharesResponse,
} from "./query_pb.js"
import { MethodKind } from "@bufbuild/protobuf"

/**
 * Query defines the gRPC querier service.
 *
 * @generated from service nibiru.spot.v1.Query
 */
export const Query = {
  typeName: "nibiru.spot.v1.Query",
  methods: {
    /**
     * Parameters of the spot module.
     *
     * @generated from rpc nibiru.spot.v1.Query.Params
     */
    params: {
      name: "Params",
      I: QueryParamsRequest,
      O: QueryParamsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Next available pool id number.
     *
     * @generated from rpc nibiru.spot.v1.Query.PoolNumber
     */
    poolNumber: {
      name: "PoolNumber",
      I: QueryPoolNumberRequest,
      O: QueryPoolNumberResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Fetch a pool by id.
     *
     * @generated from rpc nibiru.spot.v1.Query.Pool
     */
    pool: {
      name: "Pool",
      I: QueryPoolRequest,
      O: QueryPoolResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns all pools.
     *
     * @generated from rpc nibiru.spot.v1.Query.Pools
     */
    pools: {
      name: "Pools",
      I: QueryPoolsRequest,
      O: QueryPoolsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Parameters of a single pool.
     *
     * @generated from rpc nibiru.spot.v1.Query.PoolParams
     */
    poolParams: {
      name: "PoolParams",
      I: QueryPoolParamsRequest,
      O: QueryPoolParamsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Number of pools.
     *
     * @generated from rpc nibiru.spot.v1.Query.NumPools
     */
    numPools: {
      name: "NumPools",
      I: QueryNumPoolsRequest,
      O: QueryNumPoolsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Total liquidity across all pools.
     *
     * @generated from rpc nibiru.spot.v1.Query.TotalLiquidity
     */
    totalLiquidity: {
      name: "TotalLiquidity",
      I: QueryTotalLiquidityRequest,
      O: QueryTotalLiquidityResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Total liquidity in a single pool.
     *
     * @generated from rpc nibiru.spot.v1.Query.TotalPoolLiquidity
     */
    totalPoolLiquidity: {
      name: "TotalPoolLiquidity",
      I: QueryTotalPoolLiquidityRequest,
      O: QueryTotalPoolLiquidityResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Total shares in a single pool.
     *
     * @generated from rpc nibiru.spot.v1.Query.TotalShares
     */
    totalShares: {
      name: "TotalShares",
      I: QueryTotalSharesRequest,
      O: QueryTotalSharesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Instantaneous price of an asset in a pool.
     *
     * @generated from rpc nibiru.spot.v1.Query.SpotPrice
     */
    spotPrice: {
      name: "SpotPrice",
      I: QuerySpotPriceRequest,
      O: QuerySpotPriceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Estimates the amount of assets returned given an exact amount of tokens to
     * swap.
     *
     * @generated from rpc nibiru.spot.v1.Query.EstimateSwapExactAmountIn
     */
    estimateSwapExactAmountIn: {
      name: "EstimateSwapExactAmountIn",
      I: QuerySwapExactAmountInRequest,
      O: QuerySwapExactAmountInResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Estimates the amount of tokens required to return the exact amount of
     * assets requested.
     *
     * @generated from rpc nibiru.spot.v1.Query.EstimateSwapExactAmountOut
     */
    estimateSwapExactAmountOut: {
      name: "EstimateSwapExactAmountOut",
      I: QuerySwapExactAmountOutRequest,
      O: QuerySwapExactAmountOutResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Estimates the amount of pool shares returned given an amount of tokens to
     * join.
     *
     * @generated from rpc nibiru.spot.v1.Query.EstimateJoinExactAmountIn
     */
    estimateJoinExactAmountIn: {
      name: "EstimateJoinExactAmountIn",
      I: QueryJoinExactAmountInRequest,
      O: QueryJoinExactAmountInResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Estimates the amount of tokens required to obtain an exact amount of pool
     * shares.
     *
     * @generated from rpc nibiru.spot.v1.Query.EstimateJoinExactAmountOut
     */
    estimateJoinExactAmountOut: {
      name: "EstimateJoinExactAmountOut",
      I: QueryJoinExactAmountOutRequest,
      O: QueryJoinExactAmountOutResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Estimates the amount of tokens returned to the user given an exact amount
     * of pool shares.
     *
     * @generated from rpc nibiru.spot.v1.Query.EstimateExitExactAmountIn
     */
    estimateExitExactAmountIn: {
      name: "EstimateExitExactAmountIn",
      I: QueryExitExactAmountInRequest,
      O: QueryExitExactAmountInResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Estimates the amount of pool shares required to extract an exact amount of
     * tokens from the pool.
     *
     * @generated from rpc nibiru.spot.v1.Query.EstimateExitExactAmountOut
     */
    estimateExitExactAmountOut: {
      name: "EstimateExitExactAmountOut",
      I: QueryExitExactAmountOutRequest,
      O: QueryExitExactAmountOutResponse,
      kind: MethodKind.Unary,
    },
  },
} as const
